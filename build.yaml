resources:
- repo: self
  clean: true
phases:
- phase: Build_and test

  queue:
    name: Hosted
    condition: succeeded()
    demands: java

#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
  steps:
  - task: DotNetCoreInstaller@0
    displayName: Use .NET Core sdk  2.1.302
    inputs:
      version: ' 2.1.302'

  - task: SonarSource.sonarqube.15B84CA1-B62F-4A2A-A403-89B77A063157.SonarQubePrepare@4
    displayName: Prepare analysis on SonarQube
    inputs:
      SonarQube: Sonarqube
      projectKey: Transferuj
      projectName: Transferuj
      extraProperties: |  
     sonar.cs.opencover.reportsPaths=/opt/vsts/work/1/s/test/Lizards.Data.Azure.Tests/coverage.opencover.xml
	 sonar.cs.opencover.reportsPaths=/opt/vsts/work/1/s/test/Lizards.Data.Tests/coverage.opencover.xml

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: custom
      projects: '**/*.csproj'
      custom: msbuild
      arguments: '/p:Configuration=debug'

  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: |  
     test/**/*.csproj
     test/**/*.fsproj
      arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover -o results.txt'

  - task: PublishCodeCoverageResults@1
    displayName: Publish code coverage from $(System.DefaultWorkingDirectory)/test/**/coverage.cobertura.xml
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/test/**/coverage.cobertura.xml'
    enabled: false

  - task: SonarSource.sonarqube.6D01813A-9589-4B15-8491-8164AEB38055.SonarQubeAnalyze@4
    displayName: Run Code Analysis

  - task: SonarSource.sonarqube.291ed61f-1ee4-45d3-b1b0-bf822d9095ef.SonarQubePublish@4
    displayName: Publish Quality Gate Result

  - task: PublishBuildArtifacts@1
    displayName: Unit test results
    inputs:
      PathtoPublish: 'test/Unit'


- phase: Publish_

